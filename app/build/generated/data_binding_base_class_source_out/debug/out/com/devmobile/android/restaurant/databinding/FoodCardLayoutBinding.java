// Generated by view binder compiler. Do not edit!
package com.devmobile.android.restaurant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devmobile.android.restaurant.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FoodCardLayoutBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialCardView cardViewFod;

  @NonNull
  public final MaterialCheckBox checkboxFood;

  @NonNull
  public final ConstraintLayout constraintCardChild;

  @NonNull
  public final Guideline guidelineHorizontal;

  @NonNull
  public final ShapeableImageView imageFood;

  @NonNull
  public final ShapeableImageView imageTimeToPrepare;

  @NonNull
  public final MaterialTextView textFoodName;

  @NonNull
  public final MaterialTextView textFoodPrice;

  @NonNull
  public final MaterialTextView textPrepareTime;

  private FoodCardLayoutBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialCardView cardViewFod, @NonNull MaterialCheckBox checkboxFood,
      @NonNull ConstraintLayout constraintCardChild, @NonNull Guideline guidelineHorizontal,
      @NonNull ShapeableImageView imageFood, @NonNull ShapeableImageView imageTimeToPrepare,
      @NonNull MaterialTextView textFoodName, @NonNull MaterialTextView textFoodPrice,
      @NonNull MaterialTextView textPrepareTime) {
    this.rootView = rootView;
    this.cardViewFod = cardViewFod;
    this.checkboxFood = checkboxFood;
    this.constraintCardChild = constraintCardChild;
    this.guidelineHorizontal = guidelineHorizontal;
    this.imageFood = imageFood;
    this.imageTimeToPrepare = imageTimeToPrepare;
    this.textFoodName = textFoodName;
    this.textFoodPrice = textFoodPrice;
    this.textPrepareTime = textPrepareTime;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static FoodCardLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FoodCardLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.food_card_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FoodCardLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      MaterialCardView cardViewFod = (MaterialCardView) rootView;

      id = R.id.checkboxFood;
      MaterialCheckBox checkboxFood = ViewBindings.findChildViewById(rootView, id);
      if (checkboxFood == null) {
        break missingId;
      }

      id = R.id.constraintCardChild;
      ConstraintLayout constraintCardChild = ViewBindings.findChildViewById(rootView, id);
      if (constraintCardChild == null) {
        break missingId;
      }

      id = R.id.guidelineHorizontal;
      Guideline guidelineHorizontal = ViewBindings.findChildViewById(rootView, id);
      if (guidelineHorizontal == null) {
        break missingId;
      }

      id = R.id.imageFood;
      ShapeableImageView imageFood = ViewBindings.findChildViewById(rootView, id);
      if (imageFood == null) {
        break missingId;
      }

      id = R.id.imageTimeToPrepare;
      ShapeableImageView imageTimeToPrepare = ViewBindings.findChildViewById(rootView, id);
      if (imageTimeToPrepare == null) {
        break missingId;
      }

      id = R.id.textFoodName;
      MaterialTextView textFoodName = ViewBindings.findChildViewById(rootView, id);
      if (textFoodName == null) {
        break missingId;
      }

      id = R.id.textFoodPrice;
      MaterialTextView textFoodPrice = ViewBindings.findChildViewById(rootView, id);
      if (textFoodPrice == null) {
        break missingId;
      }

      id = R.id.textPrepareTime;
      MaterialTextView textPrepareTime = ViewBindings.findChildViewById(rootView, id);
      if (textPrepareTime == null) {
        break missingId;
      }

      return new FoodCardLayoutBinding((MaterialCardView) rootView, cardViewFod, checkboxFood,
          constraintCardChild, guidelineHorizontal, imageFood, imageTimeToPrepare, textFoodName,
          textFoodPrice, textPrepareTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
