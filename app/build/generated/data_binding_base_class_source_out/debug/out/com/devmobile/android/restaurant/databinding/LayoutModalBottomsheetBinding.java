// Generated by view binder compiler. Do not edit!
package com.devmobile.android.restaurant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devmobile.android.restaurant.R;
import com.google.android.material.bottomsheet.BottomSheetDragHandleView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutModalBottomsheetBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton buttonDecrementFoodsQuantity;

  @NonNull
  public final MaterialButton buttonIncrementFoodsQuantity;

  @NonNull
  public final BottomSheetDragHandleView dragHandleBottomSheet;

  @NonNull
  public final RelativeLayout frameBottomSheetFoodViewGroup;

  @NonNull
  public final ShapeableImageView imageFood;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final MaterialTextView textFoodDescriptionBottomSheet;

  @NonNull
  public final TextInputEditText textFoodPreferences;

  @NonNull
  public final TextInputEditText textInputFoodQuantityOrder;

  private LayoutModalBottomsheetBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton buttonDecrementFoodsQuantity,
      @NonNull MaterialButton buttonIncrementFoodsQuantity,
      @NonNull BottomSheetDragHandleView dragHandleBottomSheet,
      @NonNull RelativeLayout frameBottomSheetFoodViewGroup, @NonNull ShapeableImageView imageFood,
      @NonNull LinearLayout linearLayout2, @NonNull MaterialTextView textFoodDescriptionBottomSheet,
      @NonNull TextInputEditText textFoodPreferences,
      @NonNull TextInputEditText textInputFoodQuantityOrder) {
    this.rootView = rootView;
    this.buttonDecrementFoodsQuantity = buttonDecrementFoodsQuantity;
    this.buttonIncrementFoodsQuantity = buttonIncrementFoodsQuantity;
    this.dragHandleBottomSheet = dragHandleBottomSheet;
    this.frameBottomSheetFoodViewGroup = frameBottomSheetFoodViewGroup;
    this.imageFood = imageFood;
    this.linearLayout2 = linearLayout2;
    this.textFoodDescriptionBottomSheet = textFoodDescriptionBottomSheet;
    this.textFoodPreferences = textFoodPreferences;
    this.textInputFoodQuantityOrder = textInputFoodQuantityOrder;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutModalBottomsheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutModalBottomsheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_modal_bottomsheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutModalBottomsheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDecrementFoodsQuantity;
      MaterialButton buttonDecrementFoodsQuantity = ViewBindings.findChildViewById(rootView, id);
      if (buttonDecrementFoodsQuantity == null) {
        break missingId;
      }

      id = R.id.buttonIncrementFoodsQuantity;
      MaterialButton buttonIncrementFoodsQuantity = ViewBindings.findChildViewById(rootView, id);
      if (buttonIncrementFoodsQuantity == null) {
        break missingId;
      }

      id = R.id.drag_handleBottomSheet;
      BottomSheetDragHandleView dragHandleBottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (dragHandleBottomSheet == null) {
        break missingId;
      }

      RelativeLayout frameBottomSheetFoodViewGroup = (RelativeLayout) rootView;

      id = R.id.imageFood;
      ShapeableImageView imageFood = ViewBindings.findChildViewById(rootView, id);
      if (imageFood == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.textFoodDescriptionBottomSheet;
      MaterialTextView textFoodDescriptionBottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (textFoodDescriptionBottomSheet == null) {
        break missingId;
      }

      id = R.id.textFoodPreferences;
      TextInputEditText textFoodPreferences = ViewBindings.findChildViewById(rootView, id);
      if (textFoodPreferences == null) {
        break missingId;
      }

      id = R.id.textInputFoodQuantityOrder;
      TextInputEditText textInputFoodQuantityOrder = ViewBindings.findChildViewById(rootView, id);
      if (textInputFoodQuantityOrder == null) {
        break missingId;
      }

      return new LayoutModalBottomsheetBinding((RelativeLayout) rootView,
          buttonDecrementFoodsQuantity, buttonIncrementFoodsQuantity, dragHandleBottomSheet,
          frameBottomSheetFoodViewGroup, imageFood, linearLayout2, textFoodDescriptionBottomSheet,
          textFoodPreferences, textInputFoodQuantityOrder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
